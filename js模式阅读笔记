JavaScript模式


#第一章   简介

##基本概念
三类型模式：设计模式，编码模式，反模式

以前设计模式主要是从强类型的语言角度出发，也就没必要严格的应用在js中

js是一门面向对象的语言，在js中，任何一段js代码都很可能是一个对象，只有五种基本类型的数据不是对象

数值，字符串，bool。null，undefined，，而且前三种也可以通过对应的基本类型封装形式体现的对象表示（比如new Number()）


在js中，定义变量的时候已经同时在处理对象了，首先该变量自动成为内置对象的一个属性（全局变量就是window下的一个属性）


对象可以理解为一个容器，容器中包含了命名的属性，键-值对的列表


对象主要有两种类型：
原生的：在ecmaScript标准有详细描述 ；原生的继续划分，可以分为内置对象和用户自定义对象
主机的：在主机环境中定义的（列如浏览器环境）

js没有类，只处理对象；熟练掌握对象的处理方法

继承一般用于重用代码，js没有继承，但可以使用原型


第2章 基本技巧

## 编写可维护的代码



易维护的代码具有如下特性

1、阅读性好 2、具有一致性 3 预见性好 4看起来如同一个人编写 5有文档


避免使用全局变量，全局变量归全局属性拥有。可能与第三方库冲突。

js中全局变量可以不知不觉创建
function sum (x,y){
result=x+y;
return result
}
全局变量一般写个cofig对象；将每个变量看着属性就可以

变量释放时的副作用

使用var定义的全局变量不可删除


for循环
for循环经常用在遍历数组或者类数组对象

但每次循环都要访问数据长度，这样会使代码变慢






















